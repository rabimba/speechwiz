!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(b.MitchAllen||(b.MitchAllen={})).MazeGeneratorCore=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";b.exports.create=function(a){a=a||{};var b=a.grid;return b?Object.assign(b,{carveMaze:function(a,b,c,d){if(c>=d)return void console.warn("MAXIMUM DEPTH REACHED: %d",d);if(this.isCell(a,b)){var e=this.getShuffledNeighborDirs(a,b);for(var f in e){var g=e[f],h=this.getNeighbor(a,b,g);null!==h&&(this.isMasked(h.x,h.y)||this.isCell(h.x,h.y)&&!this.hasConnections(h.x,h.y)&&(this.connectUndirected(a,b,g),this.carveMaze(h.x,h.y,c+1,d)))}}},afterGenerate:function(a){},generate:function(a){a=a||{};var b=a.mask||[],c=a.start||{},d=c.c||0,e=c.r||0;this.fill(0);for(var f in b){var g=b[f];this.mask(g.c,g.r)}var h=this.xSize*this.ySize;this.carveMaze(d,e,0,h),this.afterGenerate(a)}}):null}},{}]},{},[1])(1)});